{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAwB/B,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA/BbN,EAAKC,KAAKa,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAW,CACfX,MAAOY,OAAOH,EAAMI,cAAcb,MAAMc,OACxCC,KAAMH,OAAOH,EAAMI,cAAcE,KAAKD,OACtCE,OAAQJ,OAAOH,EAAMI,cAAcG,OAAOF,QAE5CpB,EAAKC,KAAKsB,QACV,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAASK,OAAQE,IACnCpB,EAAcoB,EAAI,EAAGP,EAASX,MAAQW,EAASI,KAAOG,GACnDC,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAA5B,GAAS6B,OAAOC,QAAQ,qBAAqBvB,QAAeC,MAAU,IAEvEuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBoB,EAAA5B,GAAS6B,OAAOG,QAAQ,oBAAoBzB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const formData = {\n    delay: Number(event.currentTarget.delay.value),\n    step: Number(event.currentTarget.step.value),\n    amount: Number(event.currentTarget.amount.value),\n  };\n  refs.form.reset();\n  for (let i = 0; i < formData.amount; i++) {\n    createPromise(i + 1, formData.delay + formData.step * i)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","formData","Number","currentTarget","value","step","amount","reset","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.d81284f7.js.map"}